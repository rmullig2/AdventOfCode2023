import unittest
from day12_part2 import *

input_list = get_input("input_test.txt")
spring_rows, broken_number = get_spring_rows_and_broken_number(input_list)

class UnfoldedInput(unittest.TestCase):
    def test_unfolded_input(self):
        self.assertEqual(spring_rows[0], '???.###????.###????.###????.###????.###')
        self.assertEqual(spring_rows[1], '.??..??...?##.?.??..??...?##.?.??..??...?##.?.??..??...?##.?.??..??...?##.')
        self.assertEqual(spring_rows[2], '?#?#?#?#?#?#?#???#?#?#?#?#?#?#???#?#?#?#?#?#?#???#?#?#?#?#?#?#???#?#?#?#?#?#?#?')
        self.assertEqual(spring_rows[3], '????.#...#...?????.#...#...?????.#...#...?????.#...#...?????.#...#...')
        self.assertEqual(spring_rows[4], '????.######..#####.?????.######..#####.?????.######..#####.?????.######..#####.?????.######..#####.')
        self.assertEqual(spring_rows[5], '?###??????????###??????????###??????????###??????????###????????')

        self.assertEqual(broken_number[0], [1,1,3,1,1,3,1,1,3,1,1,3,1,1,3])
        self.assertEqual(broken_number[1], [1,1,3,1,1,3,1,1,3,1,1,3,1,1,3])
        self.assertEqual(broken_number[2], [1,3,1,6,1,3,1,6,1,3,1,6,1,3,1,6,1,3,1,6])
        self.assertEqual(broken_number[3], [4,1,1,4,1,1,4,1,1,4,1,1,4,1,1])
        self.assertEqual(broken_number[4], [1,6,5,1,6,5,1,6,5,1,6,5,1,6,5])
        self.assertEqual(broken_number[5], [3,2,1,3,2,1,3,2,1,3,2,1,3,2,1])
